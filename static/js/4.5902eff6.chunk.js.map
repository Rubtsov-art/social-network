{"version":3,"sources":["components/FormControl/FormControl.module.css","validators/validators.js","components/FormControl/FormControl.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","components/hoc/withAuthRedirectComponent.jsx","assets/images/default-avatar.png","components/Profile/Profile.module.css","components/Profile/Posts/Posts.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/PostField/PostField.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileInfoContent/ProfileInfoContent.module.css","components/Profile/ProfileInfo/ProfileInfoForms/ProfileInfoForms.module.css","components/Profile/Avatar/Avatar.module.css","components/Profile/ProfileStatus/ProfileStatus.module.css","components/Profile/Posts/Post/Post.jsx","components/Profile/Posts/PostField/PostField.jsx","components/Profile/Posts/Posts.jsx","components/Profile/Posts/PostsContainer.jsx","components/Profile/ProfileInfo/Contacts/Contacts.jsx","components/Profile/ProfileInfo/ProfileInfoContent/ProfileInfoContent.jsx","components/Profile/ProfileInfo/ProfileInfoForms/ProfileInfoForms.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Avatar/Avatar.jsx","components/Profile/ProfileStatus/ProfileStatusWithHooks.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","style","errorText","Input","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","TypeError","_defineProperties","target","descriptor","enumerable","configurable","writable","defineProperty","key","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","Constructor","protoProps","staticProps","this","to","React","connect","Post","post","message","deletePost","onClick","postId","aria-label","maxLength300","PostReduxField","reduxForm","form","onSubmit","handleSubmit","Field","formInput","component","type","placeholder","name","validate","submit","Posts","postListItem","postsData","reverse","map","p","id","formData","addPost","postField","posts_list","PostsContainer","profilePage","postFieldValue","dispatch","actionCreatorAddPost","Contacts","contactTitle","contactValue","ProfileInfoContent","useState","fullInfo","setFullInfo","profileInfo","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contacts","keys","c","buttonClose","buttonOpen","ProfileInfoReduxForms","loginFormField","formsStyle","invalidFormData","ProfileInfo","editMode","setEditMode","info","initialValues","saveProfileData","then","isOwner","editButton","Avatar","Preloader","photos","large","avatar","src","alt","defaultAvatar","controlButtons","onChange","e","files","savePhoto","inputFile","for","area-label","close","ProfileStatusWithHooks","status","setStatus","useEffect","currentTarget","statusInput","autoFocus","onBlur","updateUserStatus","onDoubleClick","Profile","main_content","ProfileContainer","refreshProfile","userId","match","params","loginUserId","getUserProfile","getUserStatus","componentDidMount","componentDidUpdate","prevProps","prevState","render","compose","withRouter"],"mappings":"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","file":"static/js/4.5902eff6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__1HG8e\",\"errorText\":\"FormControl_errorText__3HYoM\",\"invalidFormData\":\"FormControl_invalidFormData__3mRTo\"};","export const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'field is required'\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n     return (value) => {\r\n        if (value.length > maxLength) {\r\n            return (`maximum ${maxLength} symbols`)\r\n        }\r\n        return undefined\r\n    }\r\n}","import React from 'react';\r\nimport style from './FormControl.module.css';\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <textarea className={hasError? style.error : \" \"} {...input} {...props}/>\r\n          { hasError && <span className={style.errorText}>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <input className={hasError? style.error : \" \"} {...input} {...props}/>\r\n          { hasError && <span className={style.errorText}>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return ({\r\n        isAuth: state.auth.isAuth,\r\n    })\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    return connect (mapStateToProps, {})(RedirectComponent)\r\n}","module.exports = __webpack_public_path__ + \"static/media/default-avatar.57cba6c6.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main_content\":\"Profile_main_content__3f2WC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Posts_post__3gvZq\",\"posts_list\":\"Posts_posts_list__1-bmI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__2r09U\",\"deletePost\":\"Post_deletePost__2hQg2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"PostField_formInput__3mol0\",\"submit\":\"PostField_submit__P60Qd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"ProfileInfo_info__1gD3z\",\"editButton\":\"ProfileInfo_editButton__1-X1h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfoContent_profileInfo__30ibY\",\"contacts\":\"ProfileInfoContent_contacts__14rCM\",\"buttonClose\":\"ProfileInfoContent_buttonClose__k05dW\",\"buttonOpen\":\"ProfileInfoContent_buttonOpen__38EU7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInput\":\"ProfileInfoForms_formInput__3eR1c\",\"submit\":\"ProfileInfoForms_submit__1RDhz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"Avatar_avatar__2zptx\",\"controlButtons\":\"Avatar_controlButtons__2sDlS\",\"inputFile\":\"Avatar_inputFile__33qcO\",\"close\":\"Avatar_close__2yMOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"ProfileStatus_status__WspCA\",\"statusInput\":\"ProfileStatus_statusInput__1qF4i\"};","import React from 'react';\r\nimport style from './Post.module.css'\r\n\r\n//{props.deletePost(props.postId)}\r\n\r\nconst Post = (props) => {\r\n  return (\r\n      <li className={style.post}>\r\n          {props.message} <button className={style.deletePost} onClick={() =>{props.deletePost(props.postId)}} aria-label='delete'>x</button>\r\n      </li>\r\n  )\r\n};\r\n\r\nexport default Post;","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../../validators/validators';\r\nimport { Textarea } from '../../../FormControl/FormControl';\r\nimport style from './PostField.module.css';\r\n\r\nconst maxLength300 = maxLengthCreator(300)\r\n\r\nconst PostField = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={style.formInput} component={Textarea} type={'text'} placeholder={'Write post'} name={'postField'} validate={[required, maxLength300]}/>\r\n            <button className={style.submit}>add post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst PostReduxField = reduxForm({form: 'post'})(PostField)\r\n\r\n\r\n\r\nexport default PostReduxField","import React from 'react';\r\nimport style from './Posts.module.css';\r\nimport Post from './Post/Post';\r\nimport PostReduxField from './PostField/PostField';\r\n\r\n\r\nconst Posts = (props) => {\r\n\r\nlet postListItem = [...props.postsData].reverse().map((p) => <Post postId={p.id} deletePost={props.deletePost} message={p.message} key={p.id}/>);\r\n\r\nconst addNewPost = (formData) => {\r\n  props.addPost(formData.postField)\r\n}\r\n\r\n  return (\r\n      <section className={style.post}>\r\n          <PostReduxField onSubmit={addNewPost}/>\r\n          <ul className={style.posts_list}>\r\n          {postListItem}\r\n          </ul>\r\n      </section>\r\n  )\r\n};\r\n\r\nexport default Posts;","import { actionCreatorAddPost,  deletePost } from '../../../redux/profileReducer';\r\nimport Posts from './Posts';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return ({\r\n    postsData: state.profilePage.postsData,\r\n    postFieldValue: state.profilePage.postFieldValue,\r\n  });\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return ({\r\n    addPost: (formData) => {\r\n      dispatch(actionCreatorAddPost(formData))\r\n    },\r\n    deletePost: (postId) =>{\r\n      dispatch(deletePost(postId))\r\n    },\r\n  })\r\n};\r\n\r\nconst PostsContainer = connect(mapStateToProps, mapDispatchToProps)(Posts);\r\n\r\nexport default PostsContainer;","import React from 'react';\r\n\r\nconst Contacts = (props) => {\r\n    return (\r\n        <ul>\r\n            <li>\r\n                <p>{props.contactTitle}: <span>{props.contactValue}</span></p>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Contacts","import React, { useState } from 'react';\r\nimport style from './ProfileInfoContent.module.css';\r\nimport Contacts from '../Contacts/Contacts';\r\n\r\nconst ProfileInfoContent = (props) => {\r\n\r\n    let [fullInfo, setFullInfo] = useState(false)\r\n\r\n    const fullInfoOn = () => {\r\n        setFullInfo(true)\r\n    }\r\n\r\n    const fullInfoOff = () => {\r\n        setFullInfo(false)\r\n    }\r\n\r\n    return (\r\n        <ul className={style.profileInfo}>\r\n            <li>\r\n                <p> Full name:<span>{props.profile.fullName}</span></p>\r\n            </li>\r\n            <li>\r\n                <p>Looking for a job: <span>{props.profile.lookingForAJob ? 'yes' : 'no'}</span></p>\r\n            </li>\r\n            {props.profile.lookingForAJob && <li><p>My skills:<span>{props.profile.lookingForAJobDescription}</span></p></li>}\r\n            <li>\r\n                <p>About me: <span>{props.profile.aboutMe}</span></p>\r\n            </li>\r\n            <li>\r\n                <p className={style.contacts}>Contacts: \r\n                     { fullInfo ?\r\n                     (<>\r\n                     <span>\r\n                         {Object.keys(props.profile.contacts).map(c => {\r\n                         return <Contacts key={c} contactTitle={c} contactValue={props.profile.contacts[c]} />})}\r\n                     </span>\r\n                     <button onClick={fullInfoOff} className={style.buttonClose} aria-label={'close full Information'}>x</button>\r\n                     </>)\r\n                     : <button onClick={fullInfoOn} className={style.buttonOpen} aria-label={'open full Information'}>open</button>\r\n                    }\r\n                </p>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ProfileInfoContent","import React from 'react';\r\nimport style from './ProfileInfoForms.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input, Textarea } from '../../../FormControl/FormControl';\r\nimport { required } from '../../../../validators/validators';\r\nimport formsStyle from '../../../FormControl/FormControl.module.css';\r\n\r\nconst ProfileInfoForms = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.loginFormField}>\r\n                <label> Full name:</label>\r\n                    <Field className={style.formInput} component={Input} validate={[required]} type={'text'} placeholder={'Full name'} name={'fullName'}/>\r\n            \r\n                <label>Looking for a job:</label>\r\n                    <Field className={style.formInput} component={Input} type={'checkbox'} name={'lookingForAJob'}/>\r\n                \r\n                <label> My skills:</label>\r\n                    <Field className={style.formInput} component={Textarea} placeholder={'My skills'} name={'lookingForAJobDescription'}/>\r\n            \r\n                <label> About me:</label>\r\n                    <Field className={style.formInput} component={Textarea} placeholder={'About me'} name={'aboutMe'}/>\r\n            \r\n                <p>Contacts: <span>{Object.keys(props.profile.contacts).map(c => {\r\n                    return <div key={c}> \r\n                            <span>{c}:</span> <Field className={style.formInput} component={Input} placeholder={c} name={'contacts.' + c}/>\r\n                            </div>\r\n                })}</span></p>\r\n                {props.error && <div className={formsStyle.invalidFormData}>{props.error}</div>}\r\n                <button className={style.submit}>Submit</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileInfoReduxForms = reduxForm ({\r\n    form: 'profileData'\r\n}) (ProfileInfoForms)\r\n\r\nexport default ProfileInfoReduxForms","import React, { useState } from 'react';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileInfoContent from './ProfileInfoContent/ProfileInfoContent'\r\nimport ProfileInfoForms from './ProfileInfoForms/ProfileInfoForms';\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const editModeOn = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const editModeOff = () => {\r\n        setEditMode(false)\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        props.saveProfileData(formData).then(\r\n            () => {\r\n                editModeOff()\r\n            }\r\n        )\r\n    }\r\n\r\n    return (<div className={style.info}>\r\n             {editMode ? \r\n                <ProfileInfoForms initialValues={props.profile} profile={props.profile} onSubmit={onSubmit}/> \r\n                : <ProfileInfoContent profile={props.profile}/>}\r\n             {(props.isOwner && !editMode) ? <button className={style.editButton} onClick={editModeOn}>edit information</button> : null}\r\n                \r\n            </div>)\r\n}\r\n\r\nexport default ProfileInfo","import React from 'react';\r\nimport style from './Avatar.module.css'\r\nimport Preloader from '../../../reusingComponent/animation/Preloader';\r\nimport { useState } from 'react';\r\nimport defaultAvatar from '../../../assets/images/default-avatar.png';\r\n\r\nconst Avatar = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  const editModeOn = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const editModeOff = () => {\r\n    setEditMode(false);\r\n  }\r\n\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n\r\n  const onMainPhotoChange = (e) => {\r\n      if (e.target.files.length) {\r\n        props.savePhoto(e.target.files[0])\r\n      }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {props.profile.photos.large ? <img className={style.avatar} onClick={editModeOn} src={props.profile.photos.large} alt=\"it's you\"/> \r\n                                  : <img className={style.avatar} src={defaultAvatar} alt=\"it's you\"/>\r\n            }\r\n      \r\n      {props.isOwner && editMode && <div className={style.controlButtons}>\r\n                                      <input type={\"file\"} id={\"avatarFile\"} onChange={onMainPhotoChange} className={style.inputFile}/>\r\n                                      <label for={\"avatarFile\"}>choose a file</label>\r\n                                      <button onClick={editModeOff} area-label={'close avatar edit'} className={style.close}>x</button>\r\n                                    </div>}\r\n    </>\r\n  )\r\n};\r\n\r\nexport default Avatar;","import React, { useState, useEffect } from 'react';\r\nimport style from './ProfileStatus.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect ( () => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n\r\n    const editModOn = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const editModOff = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    };\r\n    \r\n    return (\r\n        <div className={style.status}>\r\n            {editMode ?\r\n                <input onChange={onStatusChange} className={style.statusInput} autoFocus={true} onBlur={editModOff} value={status} />\r\n                : <span onDoubleClick={editModOn}>{props.status || '---'}</span>\r\n            }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ProfileStatusWithHooks","import React from 'react';\r\nimport style from './Profile.module.css'\r\nimport PostsContainer from './Posts/PostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport Avatar from './Avatar/Avatar';\r\nimport Preloader from '../../reusingComponent/animation/Preloader';\r\nimport ProfileStatusWithHooks from './ProfileStatus/ProfileStatusWithHooks';\r\n\r\n \r\nconst Profile = (props) => {\r\n  return (\r\n    <section className={style.main_content}>\r\n      <Avatar savePhoto={props.savePhoto} isOwner={props.isOwner} profile={props.profile}/>\r\n      <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus} />\r\n      {props.profile ? \r\n        <ProfileInfo isOwner={props.isOwner} profile={props.profile} saveProfileData={props.saveProfileData}/> \r\n        : <Preloader/>}\r\n      <PostsContainer/>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfileData } from '../../redux/profileReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirectComponent';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile = () => {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.loginUserId\r\n        };\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount = (props) => {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate = (prevProps, prevState) => {\r\n        if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n    \r\n    render = () => {\r\n        return (\r\n            <Profile {...this.props} saveProfileData={this.props.saveProfileData} savePhoto={this.props.savePhoto} isOwner={!this.props.match.params.userId} profile={this.props.profile} status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    loginUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose (\r\n    connect (mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, savePhoto, saveProfileData}),\r\n    withRouter,\r\n    withAuthRedirect\r\n    ) \r\n    (ProfileContainer)"],"sourceRoot":""}