{"version":3,"sources":["components/FormControl/FormControl.module.css","validators/validators.js","components/FormControl/FormControl.jsx","components/Login/Login.module.css","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx"],"names":["module","exports","required","value","maxLengthCreator","maxLength","length","Textarea","input","meta","props","hasError","touched","error","className","style","errorText","Input","loginReduxForm","reduxForm","form","onSubmit","handleSubmit","loginFormField","Field","component","type","placeholder","validate","name","for","formsStyle","invalidFormData","captchaUrl","src","connect","state","isAuth","auth","login","to","formData","loginName","loginPassword","rememberMe","captcha"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,UAAY,+BAA+B,gBAAkB,uC,iCCDlH,oEAAO,IAAMC,EAAW,SAACC,GACrB,IAAIA,EAGJ,MAAO,qBAGEC,EAAmB,SAACC,GAC5B,OAAO,SAACF,GACL,GAAIA,EAAMG,OAASD,EACf,MAAM,WAAN,OAAmBA,EAAnB,e,oJCNCE,EAAW,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAE3CC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACI,6BACI,4CAAUC,UAAWH,EAAUI,IAAMF,MAAQ,KAASL,EAAWE,IACjEC,GAAY,0BAAMG,UAAWC,IAAMC,WAAYP,EAAKI,SAKnDI,EAAQ,SAAC,GAA6B,IAA5BT,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,KAASC,EAAW,gCAExCC,EAAWF,EAAKG,SAAWH,EAAKI,MAEtC,OACI,6BACI,yCAAOC,UAAWH,EAAUI,IAAMF,MAAQ,KAASL,EAAWE,IAC9DC,GAAY,0BAAMG,UAAWC,IAAMC,WAAYP,EAAKI,U,oBCtBhEb,EAAOC,QAAU,CAAC,eAAiB,gC,oICyBpBiB,EAJQC,YAAW,CAC9BC,KAAM,SADaD,EAfL,SAACT,GACf,OACI,0BAAMW,SAAUX,EAAMY,aAAcR,UAAWC,IAAMQ,gBACjD,kBAACC,EAAA,EAAD,CAAOC,UAAWR,IAAOS,KAAM,OAAQC,YAAa,QAASC,SAAU,CAAC1B,KAAW2B,KAAM,cACzF,kBAACL,EAAA,EAAD,CAAOC,UAAWR,IAAOS,KAAM,WAAYC,YAAa,WAAYC,SAAU,CAAC1B,KAAW2B,KAAM,kBAChG,kBAACL,EAAA,EAAD,CAAOC,UAAWR,IAAOS,KAAM,WAAYG,KAAM,eACjD,2BAAOC,IAAK,cAAZ,eACCpB,EAAMG,OAAS,yBAAKC,UAAWiB,IAAWC,iBAAkBtB,EAAMG,OACnE,0CACCH,EAAMuB,YAAc,yBAAKC,IAAKxB,EAAMuB,aACpCvB,EAAMuB,YAAc,kBAACT,EAAA,EAAD,CAAOC,UAAWR,IAAOS,KAAM,OAAQC,YAAa,gBAAiBC,SAAU,CAAC1B,KAAW2B,KAAM,gB,wBCYnHM,uBALS,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,OACnBJ,WAAYG,EAAME,KAAKL,cAGe,CAACM,WAA1BJ,EAtBD,SAAC,GAAiC,IAAhCI,EAA+B,EAA/BA,MAAOF,EAAwB,EAAxBA,OAAQJ,EAAgB,EAAhBA,WAM7B,OAAII,EACK,kBAAC,IAAD,CAAUG,GAAG,aAIpB,iCACI,kBAAC,EAAD,CAAgBnB,SAVL,SAACoB,GAChBF,EAAME,EAASC,UAAWD,EAASE,cAAeF,EAASG,WAAYH,EAASI,UASxCZ,WAAYA","file":"static/js/7.9dddc14d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControl_error__1HG8e\",\"errorText\":\"FormControl_errorText__3HYoM\",\"invalidFormData\":\"FormControl_invalidFormData__3mRTo\"};","export const required = (value) => {\r\n    if (value) {\r\n        return undefined\r\n    }\r\n    return 'field is required'\r\n};\r\n\r\nexport const maxLengthCreator = (maxLength) => {\r\n     return (value) => {\r\n        if (value.length > maxLength) {\r\n            return (`maximum ${maxLength} symbols`)\r\n        }\r\n        return undefined\r\n    }\r\n}","import React from 'react';\r\nimport style from './FormControl.module.css';\r\n\r\n\r\nexport const Textarea = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <textarea className={hasError? style.error : \" \"} {...input} {...props}/>\r\n          { hasError && <span className={style.errorText}>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Input = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.touched && meta.error;\r\n\r\n    return (\r\n        <div>\r\n            <input className={hasError? style.error : \" \"} {...input} {...props}/>\r\n          { hasError && <span className={style.errorText}>{meta.error}</span> }\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginFormField\":\"Login_loginFormField__3HqOL\"};","import React from 'react'\r\nimport style from '../Login.module.css';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input } from '../../FormControl/FormControl';\r\nimport { required } from '../../../validators/validators';\r\nimport formsStyle from '../../FormControl/FormControl.module.css';\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.loginFormField}>\r\n            <Field component={Input} type={'text'} placeholder={'login'} validate={[required]} name={'loginName'}/>\r\n            <Field component={Input} type={'password'} placeholder={'password'} validate={[required]} name={'loginPassword'}/>\r\n            <Field component={Input} type={'checkbox'} name={'rememberMe'} />\r\n            <label for={'rememberMe'}>Remember Me</label>\r\n            {props.error && <div className={formsStyle.invalidFormData}>{props.error}</div>}\r\n            <button>Submit</button>\r\n            {props.captchaUrl && <img src={props.captchaUrl}/>}\r\n            {props.captchaUrl && <Field component={Input} type={'text'} placeholder={'write symbols'} validate={[required]} name={'captcha'}/>}\r\n        </form>\r\n    )\r\n};\r\n\r\nconst loginReduxForm = reduxForm ({\r\n    form: 'login'\r\n}) (LoginForm)\r\n\r\nexport default loginReduxForm","import React from 'react'\r\nimport LoginReduxForm from './LoginForm/LoginForm'\r\nimport { connect } from 'react-redux'\r\nimport { login } from '../../redux/authReducer'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nconst Login = ({login, isAuth, captchaUrl}) => {\r\n\r\n  const onSubmit = (formData) => {\r\n    login(formData.loginName, formData.loginPassword, formData.rememberMe, formData.captcha)\r\n  }\r\n  \r\n  if (isAuth) {\r\n    return <Redirect to=\"/profile\" />\r\n  }\r\n\r\n  return  (\r\n    <section>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n    </section>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login)"],"sourceRoot":""}