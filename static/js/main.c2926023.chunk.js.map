{"version":3,"sources":["serviceWorker.js","components/Header/NavBar/NavItem/NavItem.jsx","components/Header/NavBar/NavBar.jsx","components/Header/Logo/Logo.jsx","components/Header/Login/Login.jsx","components/Header/Login/LoginContainer.jsx","components/Header/Header.jsx","components/Friends/Friend/Friend.jsx","components/Friends/Friends.jsx","components/Friends/FriendsContainer.jsx","components/Commercial/Commercial.jsx","redux/appReducer.js","redux/friendsListReducer.js","redux/redux-store.js","components/hoc/withReactSuspense.jsx","App.js","index.js","redux/authReducer.js","components/Header/Login/Login.module.css","reusingComponent/animation/Preloader.jsx","components/Friends/Friends.module.css","components/Header/NavBar/NavBar.module.css","components/Header/NavBar/NavItem/NavItem.module.css","components/Header/Header.module.css","components/Commercial/Commercial.module.css","reusingComponent/animation/Preloader.module.css","api/api.js","redux/profileReducer.js","redux/messagesReducer.js","api/utilits/arraysReader.js","redux/usersReducer.js","components/Header/Logo/Logo.module.css","components/Friends/Friend/Friend.module.css"],"names":["Boolean","window","location","hostname","match","NavItem","props","className","style","item","to","link","activeClassName","active","text","NavBar","React","memo","global_navigation","list","Logo","logo__img","src","alt","Login","isAuth","login","loginButton","onClick","logout","loginName","LoginContainer","render","Component","connect","state","auth","Header","header","controlPanel","Friend","friend","friendName","Friends","friends","map","el","key","id","name","listName","friendsList","Commercial","commercial","commercialBlock","initialState","initialized","appReducer","action","type","friendsListReducer","stateCopy","reducers","combineReducers","profilePage","profileReducer","messagesPage","messagesReducer","usersPage","usersReducer","authReducer","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","withReactSuspense","Suspense","fallback","Preloader","ProfileContainer","lazy","MessagesContainer","UsersContainer","Settings","Music","Photos","App","catchAllUnhandedErrors","reason","promise","alert","componentDidMount","initializeApp","addEventListener","componentWillUnmount","removeEventListener","FriendsContainer","exact","path","component","AppContainer","compose","withRouter","dispatch","getLogin","then","CompleteApp","basename","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","userId","email","captchaUrl","getCaptchaUrlSuccess","payload","setUsersData","a","loginAPI","setLogin","response","data","resultCode","password","rememberMe","captcha","getCaptchaUrl","message","messages","length","stopSubmit","_error","securityAPI","getCaptchaURL","url","module","exports","preloader","loader","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currantPage","pageSize","get","toEnemy","someUser","delete","toFriend","post","profileAPI","setUserProfile","getUserStatus","updateUserStatus","newStatus","put","status","saveUserPhoto","userPhoto","formData","FormData","append","saveUserProfile","profile","postsData","postFieldValue","actionCreatorAddPost","deletePost","postId","setUserStatus","getUserProfile","savePhoto","photo","photos","saveProfileData","profileData","getState","Promise","reject","newPost","filter","p","dialogListData","user","messageData","actionCreatorAddInterlocutor","newDialog","newInterlocutor","updateObjectInArray","items","itemsId","objPropName","newObjProps","u","usersData","totalItemsCount","isFetching","isFollowingInProgress","portionSize","addFriend","removeFriend","changeCurrantPage","number","toggleIsFetching","toggleAddFriendInProgress","isInProgress","totalCount","addAndDeleteFriendFlow","APIMethod","actionCreator","deleteFriend","bind","createFriendship"],"mappings":"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","file":"static/js/main.c2926023.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport style from './NavItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst NavItem = (props) => {\r\n  return (\r\n    <li className={style.item}>\r\n      <NavLink to={props.link} activeClassName={style.active}>{props.text}</NavLink>\r\n    </li>\r\n  )\r\n};\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport style from './NavBar.module.css';\r\nimport NavItem from './NavItem/NavItem';\r\n\r\nconst NavBar = React.memo((props) => {\r\n  return (\r\n    <nav className={style.global_navigation}>\r\n      <ul className={style.list}>\r\n        <NavItem link='/profile' text='profile' />\r\n        <NavItem link='/messages' text='messages' />\r\n        <NavItem link='/settings' text='settings' />\r\n        <NavItem link='/music' text='music' />\r\n        <NavItem link='/photos' text='photos' />\r\n        <NavItem link='/users' text='users' />\r\n      </ul>\r\n    </nav>\r\n  )\r\n})\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport style from './Logo.module.css';\r\n\r\nconst Logo = React.memo((props) => {\r\n    return (\r\n      <div>\r\n      <img className={style.logo__img} src='./img/Neon-style-text-effect.png' alt='neon' />\r\n      </div>\r\n    )\r\n});\r\n\r\nexport default Logo;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Login.module.css';\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <div>\r\n            {props.isAuth ? \r\n            <div className={style.login}>\r\n                <button className={style.loginButton} onClick={props.logout}>Logout</button>\r\n                <span className={style.loginName}>{props.login}</span>\r\n            </div>\r\n            : <NavLink to={'/login'} className={style.login}>Login</NavLink>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login","import React from 'react';\r\nimport Login from './Login';\r\nimport { connect } from 'react-redux'; \r\nimport { logout } from '../../../redux/authReducer';\r\n\r\n\r\nclass LoginContainer extends React.Component {\r\n\r\n    render = () => {\r\n        return (<Login {...this.props}/>)\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect (mapStateToProps, {logout}) (LoginContainer);","import React from 'react';\r\nimport NavBar from './NavBar/NavBar';\r\nimport style from './Header.module.css';\r\nimport Logo from './Logo/Logo';\r\nimport LoginContainer from './Login/LoginContainer';\r\n\r\nconst Header = React.memo((props) => {\r\n  return (\r\n    <header className={style.header}>\r\n      <Logo /> \r\n      <div className={style.controlPanel}>\r\n        <LoginContainer />\r\n        <NavBar />\r\n      </div>\r\n    </header>\r\n  )\r\n});\r\n\r\nexport default Header;","import React from 'react';\r\nimport style from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n    return (<li className={style.friend}>\r\n            {props.friendName}\r\n            </li>\r\n    )\r\n};\r\n\r\nexport default Friend","import React from 'react';\r\nimport style from './Friends.module.css';\r\nimport Friend from './Friend/Friend';\r\n\r\nconst Friends = React.memo(({friends}) => {\r\n   let friendName = friends.map ((el) => <Friend key={el.id} friendName={el.name}/>);\r\n\r\n    return (\r\n        <section className={style.friends}>\r\n            <h3 className={style.listName}>FRIENDS LIST</h3>\r\n            <ul className={style.list}>\r\n                {friendName}\r\n            </ul>\r\n        </section>\r\n    )\r\n});\r\n\r\nexport default Friends","\r\nimport Friends from './Friends';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {return ({\r\n    friends: state.friendsList.friends\r\n})}\r\n\r\nexport default connect (mapStateToProps, {}) (Friends)","import React from 'react';\r\nimport style from './Commercial.module.css';\r\n\r\nconst Commercial = React.memo((props) => {\r\n    return (\r\n        <section className={style.commercial}>\r\n            <article className={style.commercialBlock}>HERE CAN BE YOU'S COMMERCIAL</article>\r\n        </section>\r\n    )\r\n});\r\n\r\nexport default Commercial","import { getLogin } from './authReducer';\r\n\r\nconst INITIALIZED = 'INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED: {\r\n            return ({\r\n                ...state,\r\n                initialized: true\r\n            })\r\n        }\r\n        default: return state;\r\n    };\r\n};\r\n\r\nconst initializedSuccess = () => {\r\n    return ({type: INITIALIZED})\r\n};\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getLogin());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\nexport default appReducer;","let initialState = {\r\n    friends: [\r\n        { name: 'Pasha' },\r\n        { name: 'Irina' },\r\n        { name: 'Vitia' },\r\n    ],\r\n};\r\n\r\nconst friendsListReducer = (state = initialState, action) => {\r\n        switch (action.type) {\r\n            case 1:\r\n                let stateCopy = {...state};\r\n                return stateCopy;\r\n            default: return state;\r\n        }\r\n}\r\n\r\nexport default friendsListReducer;","import {combineReducers, createStore, applyMiddleware } from \"redux\";\r\nimport profileReducer from './profileReducer';\r\nimport messagesReducer from './messagesReducer';\r\nimport friendsListReducer from './friendsListReducer';\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport appReducer from './appReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: messagesReducer,\r\n    friendsList: friendsListReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport Preloader from '../../reusingComponent/animation/Preloader';\r\n\r\n const withReactSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader />}>\r\n            <Component {...props} />\r\n            </ React.Suspense>\r\n    };\r\n}\r\n\r\nexport default withReactSuspense","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header/Header';\r\nimport FriendsContainer from './components/Friends/FriendsContainer';\r\nimport Commercial from './components/Commercial/Commercial';\r\nimport { Route, withRouter, Switch } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { initializeApp } from './redux/appReducer';\r\nimport Preloader from './reusingComponent/animation/Preloader';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/redux-store';\r\nimport withReactSuspense from './components/hoc/withReactSuspense';\r\n\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\nconst MessagesContainer = React.lazy(() => import('./components/Messages/MessagesContainer'));\r\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\r\nconst Login = React.lazy(() => import('./components/Login/Login'));\r\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\r\nconst Music = React.lazy(() => import('./components/Music/Music'));\r\nconst Photos = React.lazy(() => import('./components/Photos/Photos'));\r\n\r\nclass App extends React.Component {\r\n\r\n  catchAllUnhandedErrors = (reason, promise) => {\r\n    alert('some error')\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.initializeApp()\r\n    window.addEventListener('unhandledrejection', this.catchAllUnhandedErrors)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener('unhandledrejection', this.catchAllUnhandedErrors)\r\n  }\r\n\r\n  render = () => {\r\n    if (!this.props.initialized) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div className='wrapper'>\r\n        <Header />\r\n        <article>\r\n          <FriendsContainer />\r\n        </article>\r\n        <main className='main'>\r\n          <Switch>\r\n            <Route exact path='/' render={withReactSuspense(Login)} />\r\n            <Route path='/profile/:userId?' render={withReactSuspense(ProfileContainer)} />\r\n            <Route path='/messages' render={withReactSuspense(MessagesContainer)} />\r\n            <Route path='/settings' component={withReactSuspense(Settings)} />\r\n            <Route path='/music' component={withReactSuspense(Music)} />\r\n            <Route path='/photos' component={withReactSuspense(Photos)} />\r\n            <Route path='/users' render={withReactSuspense(UsersContainer)} />\r\n            <Route path='/login' render={withReactSuspense(Login)} />\r\n            <Route path='*' render={<div>404 not found</div>} />\r\n          </Switch>\r\n        </main>\r\n        <article>\r\n          <Commercial />\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  initialized: state.app.initialized\r\n})\r\n\r\nconst AppContainer = compose(\r\n  withRouter,\r\n  connect(mapStateToProps, { initializeApp })\r\n)(App);\r\n\r\n\r\nconst CompleteApp = (props) => {\r\n  return (<BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <Provider store={store}>\r\n      <AppContainer />\r\n    </Provider>\r\n  </BrowserRouter>)\r\n}\r\n\r\nexport default CompleteApp","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport CompleteApp from './App';\r\n\r\nReactDOM.render(\r\n            <CompleteApp/>,\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","import { loginAPI, securityAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst SET_USERS_DATA = 'SET-USERS-DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET-CAPTCHA-URL-SUCCESS';\r\n\r\nlet initialState = {\r\n    userId: null,\r\n    login: null,\r\n    email: null,\r\n    isAuth: false,\r\n    captchaUrl: null,\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS: {\r\n            return ({\r\n                ...state,\r\n                ...action.payload\r\n            })\r\n        }\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) => {\r\n    return ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\r\n}\r\n\r\nexport const setUsersData = (userId, login, email, isAuth) => {\r\n    return ({ type: SET_USERS_DATA, payload: { userId, login, email, isAuth } })\r\n};\r\n\r\nexport const getLogin = () => async (dispatch) => {\r\n    let response = await loginAPI.setLogin()\r\n\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setUsersData(id, login, email, true))\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await loginAPI.login(email, password, rememberMe, captcha)\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getLogin())\r\n    } else {\r\n        if (response.data.resultCode === 10) {\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        const message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error';\r\n        dispatch(stopSubmit('login', { _error: message }))\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaURL()\r\n    const captchaUrl = response.data.url\r\n        dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\n\r\nexport const logout = () => async (dispatch) => {\r\n        let response = await loginAPI.logout()\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUsersData(null, null, null, false))\r\n        }\r\n    }\r\n\r\nexport default authReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3nV5W\",\"loginName\":\"Login_loginName__1f8pO\",\"loginButton\":\"Login_loginButton__1DEgO\"};","import React from 'react';\r\nimport style from './Preloader.module.css';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={style.preloader}>\r\n            <div className={style.loader}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1_jSQ\",\"listName\":\"Friends_listName__1LxVu\",\"list\":\"Friends_list__14Xok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"global_navigation\":\"NavBar_global_navigation__1Kbfo\",\"item\":\"NavBar_item__1ur0j\",\"list\":\"NavBar_list__pODz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"NavItem_item__1LX2W\",\"active\":\"NavItem_active__1xxqm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2t_t8\",\"controlPanel\":\"Header_controlPanel__3D-CK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commercial\":\"Commercial_commercial__PrJwU\",\"commercialBlock\":\"Commercial_commercialBlock__Gyh5M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__25f_j\",\"loader\":\"Preloader_loader__2PrNQ\",\"spin\":\"Preloader_spin__3xLwH\"};","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': '3f4f3bf6-035a-4f75-a534-7545a1c1a8c4'\r\n    },\r\n});\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsers (currantPage, pageSize) {\r\n       return instance.get(`users?page=${currantPage}&count=${pageSize}`)\r\n        .then (response => {\r\n            return response.data\r\n        });\r\n    },\r\n\r\n    toEnemy (someUser) {\r\n        return instance.delete(`follow/${someUser}`)\r\n    },\r\n\r\n    toFriend (someUser) {\r\n        return instance.post(`follow/${someUser}`)\r\n    },\r\n};\r\n\r\n\r\nexport const loginAPI = {\r\n    setLogin () {\r\n        return instance.get('auth/me')\r\n    },\r\n\r\n    login (email, password, rememberMe = false, captcha = null) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n    },\r\n\r\n    logout () {\r\n        return instance.delete('auth/login')\r\n    },\r\n};\r\n\r\nexport const profileAPI = {\r\n    setUserProfile (userId) {\r\n       return instance.get(`profile/${userId}`)\r\n    },\r\n\r\n    getUserStatus (userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n\r\n    updateUserStatus (newStatus) {\r\n        return instance.put(`profile/status`, {status: newStatus})\r\n    },\r\n\r\n    saveUserPhoto (userPhoto) {\r\n        const formData = new FormData();\r\n        formData.append('image', userPhoto);\r\n        return instance.put(`profile/photo`, formData, {\r\n            'Content-Type': 'multipart/form=data'\r\n        })\r\n    },\r\n\r\n    saveUserProfile (profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n};\r\n\r\nexport const  securityAPI = {\r\n        getCaptchaURL () {\r\n        return instance.get(`security/get-captcha-url`)\r\n     },\r\n}","import { profileAPI } from \"../api/api\";\r\nimport { stopSubmit } from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst DELETE_POST = 'DELETE-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE';\r\nconst SET_USER_STATUS = 'SET-USER-STATUS';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE-PHOTO-SUCCESS';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: '1', message: 'first post' },\r\n        { id: '2', message: 'second post' },\r\n        { id: '3', message: 'third post' },\r\n    ],\r\n\r\n    postFieldValue: \"write post\",\r\n    profile: null,\r\n    status: '',\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: '4',\r\n                message: action.formData,\r\n            };\r\n            return ({\r\n                ...state,\r\n                postsData: [...state.postsData, newPost],\r\n            })\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                postsData: state.postsData.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return ({ ...state, profile: action.profile })\r\n        }\r\n\r\n        case SET_USER_STATUS: {\r\n            return ({ ...state, status: action.status })\r\n        }\r\n\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return ({...state, profile: {...state.profile, photos:action.photos}})\r\n        }\r\n\r\n        default: return state;\r\n\r\n    };\r\n};\r\n\r\nexport const savePhotoSuccess = (photos) => {\r\n    return ({ type: SAVE_PHOTO_SUCCESS, photos})\r\n};\r\n\r\nexport const actionCreatorAddPost = (formData) => {\r\n    return ({ type: ADD_POST, formData })\r\n};\r\n\r\nexport const deletePost = (postId) => {\r\n    return ({ type: DELETE_POST, postId })\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return ({ type: SET_USER_PROFILE, profile })\r\n}\r\n\r\nexport const setUserStatus = (status) => {\r\n    return ({ type: SET_USER_STATUS, status })\r\n}\r\n\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.setUserProfile(userId)\r\n    dispatch(setUserProfile(response.data))\r\n\r\n}\r\n\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getUserStatus(userId)\r\n    dispatch(setUserStatus(response.data))\r\n}\r\n\r\n\r\nexport const updateUserStatus = (status) => async (dispatch) => {\r\n    try {\r\n        let response = await profileAPI.updateUserStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(status))\r\n        }\r\n    } catch (error) {\r\n        alert('error')\r\n    }\r\n}\r\n\r\nexport const savePhoto = (photo) => async (dispatch) => {\r\n    let response = await profileAPI.saveUserPhoto(photo)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.data.data.photos))\r\n    }\r\n}\r\n\r\nexport const saveProfileData = (profileData) => async (dispatch, getState) => {\r\n    const userId = getState().auth.userId\r\n    let response = await profileAPI.saveUserProfile(profileData)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId))\r\n    } else {\r\n        dispatch(stopSubmit('profileData', {_error: response.data.messages[0]}))\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\n\r\nexport default profileReducer;","const ADD_INTERLOCUTOR = 'ADD-INTERLOCUTOR';\r\n\r\nlet initialState = {\r\n    dialogListData: [\r\n        { link: '/messages/pasha', user: 'Pasha' },\r\n        { link: '/messages/irina', user: 'Irina' },\r\n        { link: '/messages/vitia', user: 'Vitia' },\r\n    ],\r\n\r\n    messageData: [\r\n        { id: '1', message: 'Privet', },\r\n        { id: '2', message: 'I am Irina' },\r\n        { id: '3', message: 'I am Vitia' },\r\n    ],\r\n}\r\n\r\nconst messagesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_INTERLOCUTOR:{\r\n            let newInterlocutor = {\r\n                link: '/messages/interlocutor',\r\n                user: action.newDialog,\r\n            };\r\n            return ({\r\n                ...state,\r\n                dialogListData: [ ...state.dialogListData, newInterlocutor],\r\n            });\r\n        }\r\n        default: return state;\r\n    };\r\n};\r\n\r\nexport const actionCreatorAddInterlocutor = (newDialog) => {\r\n    return ({type: ADD_INTERLOCUTOR, newDialog})\r\n};\r\n\r\nexport default messagesReducer;","export const updateObjectInArray = (items, itemsId, objPropName, newObjProps) => {\r\n    return items.map((u) => {\r\n        if (u[objPropName] === itemsId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u;\r\n    })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../api/utilits/arraysReader\";\r\n\r\nconst FRIEND = 'FRIEND';\r\nconst ENEMY = 'ENEMY';\r\nconst SET_USERS = 'SET-USERS';\r\nconst CHANGE_CURRANT_PAGE = 'CHANGE-CURRANT-PAGE';\r\nconst SET_TOTAL_ITEMS_COUNT = 'SET-TOTAL-ITEMS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_ADD_FRIEND_IN_PROGRESS = 'TOGGLE_ADD_FRIEND_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    usersData: [],\r\n    currantPage: 1,\r\n    pageSize: 5,\r\n    totalItemsCount: 0,\r\n    isFetching: false,\r\n    isFollowingInProgress: [],\r\n    portionSize: 5,\r\n}\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FRIEND: {\r\n            return ({\r\n                ...state,\r\n                usersData: updateObjectInArray (state.usersData, action.id, 'id', {friend:true})\r\n            })\r\n        }\r\n        case ENEMY: {\r\n            return ({\r\n                ...state,\r\n                usersData: updateObjectInArray (state.usersData, action.id, 'id', {friend:false})\r\n            })\r\n        }\r\n        case SET_USERS: {\r\n            return ({ ...state, usersData: [...action.usersData] })\r\n        }\r\n        case CHANGE_CURRANT_PAGE: {\r\n            return ({ ...state, currantPage: action.number })\r\n        }\r\n        case SET_TOTAL_ITEMS_COUNT: {\r\n            return ({ ...state, totalItemsCount: action.totalCount })\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return ({ ...state, isFetching: action.isFetching })\r\n        }\r\n        case TOGGLE_ADD_FRIEND_IN_PROGRESS: {\r\n            return ({\r\n                ...state,\r\n                isFollowingInProgress: action.isInProgress\r\n                    ? [...state.isFollowingInProgress, action.userId]\r\n                    : state.isFollowingInProgress.filter(id => id !== action.userId)\r\n            })\r\n        }\r\n        default: return state;\r\n\r\n    };\r\n};\r\n\r\nexport const addFriend = (userId) => {\r\n    return ({ type: FRIEND, id: userId })\r\n};\r\n\r\nexport const removeFriend = (userId) => {\r\n    return ({ type: ENEMY, id: userId })\r\n};\r\n\r\nexport const setUsers = (usersData) => {\r\n    return ({ type: SET_USERS, usersData })\r\n}\r\n\r\nexport const changeCurrantPage = (number) => {\r\n    return ({ type: CHANGE_CURRANT_PAGE, number })\r\n}\r\n\r\nexport const setTotalItemsCount = (totalCount) => {\r\n    return ({ type: SET_TOTAL_ITEMS_COUNT, totalCount })\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return ({ type: TOGGLE_IS_FETCHING, isFetching })\r\n}\r\n\r\nexport const toggleAddFriendInProgress = (isInProgress, userId) => {\r\n    return ({ type: TOGGLE_ADD_FRIEND_IN_PROGRESS, isInProgress, userId })\r\n}\r\n\r\n\r\nexport const getUsers = (currantPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n\r\n        let data = await usersAPI.getUsers(currantPage, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalItemsCount(data.totalCount))\r\n\r\n    }\r\n}\r\n\r\nconst addAndDeleteFriendFlow = async (id, dispatch, APIMethod, actionCreator) => {\r\n    dispatch(toggleAddFriendInProgress(true, id));\r\n    let response = await APIMethod(id);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleAddFriendInProgress(false, id))\r\n\r\n} \r\n\r\nexport const deleteFriend = (id) => {\r\n    return async (dispatch) => {\r\n        let APIMethod = usersAPI.toEnemy.bind(usersAPI)\r\n        let actionCreator = removeFriend\r\n        addAndDeleteFriendFlow (id, dispatch, APIMethod, actionCreator)\r\n    }\r\n}\r\n\r\nexport const createFriendship = (id) => {\r\n    return async (dispatch) => {\r\n        let APIMethod = usersAPI.toFriend.bind(usersAPI)\r\n        let actionCreator = addFriend\r\n        addAndDeleteFriendFlow (id, dispatch, APIMethod, actionCreator)\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo__img\":\"Logo_logo__img__1BSMn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2ipcp\"};"],"sourceRoot":""}